{"version":3,"sources":["modules/general/utils/utils.tsx","modules/admin/components/Ingredients/Ingredients.tsx","modules/admin/components/Meals/IngredientSelector.tsx","modules/admin/components/Meals/Meals.tsx","modules/admin/components/Diets/CategoySelector.tsx","modules/admin/components/Diets/MealSelector.tsx","modules/admin/components/Diets/Diets.tsx","modules/admin/components/Configurator.tsx","modules/general/utils/routes.tsx","modules/auth/utils/regex.tsx","modules/general/utils/urls.tsx","modules/auth/components/LoginForm.tsx","modules/auth/components/Login.tsx","modules/auth/components/SignupForm.tsx","modules/auth/components/Signup.tsx","modules/browse/search/components/SearchBar.tsx","modules/general/components/DietCard.tsx","modules/general/components/MealsList.tsx","modules/general/components/DietInfoCard.tsx","modules/browse/search/components/SearchResults.tsx","modules/browse/search/components/Search.tsx","modules/general/components/Slider/SliderItemStyles.tsx","modules/general/components/Slider/SliderItem.tsx","modules/general/components/Slider/SliderStyles.tsx","modules/general/components/Slider/index.tsx","modules/browse/explore/components/DietsList.tsx","modules/browse/explore/components/Explore.tsx","modules/browse/components/Browse.tsx","modules/dashboard/components/AddBiometric.tsx","modules/dashboard/components/Dashboard.tsx","modules/navigation/components/Tabs.tsx","modules/navigation/components/AccountMenu.tsx","modules/navigation/components/AppBar.tsx","modules/help/components/Help.tsx","modules/diets/components/MealCard.tsx","modules/diets/components/MealInfoCard.tsx","modules/diets/components/DietPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getIngredient","ingredientId","a","axios","get","response","data","getIngredients","pagination","updateIngredient","id","newIngredient","put","name","createIngredient","post","deleteIngredient","delete","getMeals","updateMeal","newMeal","mealIngredients","filter","ing","createMeal","deleteMeal","mealId","getDiets","getDiet","dietId","updateDiet","newDiet","imageRef","categoryIds","categories","map","cat","dietMeals","meals","meal","index","mealNumber","createDiet","deleteDiet","getCategories","editIngredientModalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","Ingredients","React","useState","undefined","ingredients","setIngredients","setNewIngredient","isEditing","setIsEditing","loadIngredients","useEffect","handleDeleteIngredient","window","location","reload","alert","handleIngredientSave","sx","display","justifyContent","Button","variant","onClick","List","ingredient","ListItem","secondaryAction","IconButton","edge","aria-label","ListItemText","primary","Modal","open","Boolean","onClose","aria-labelledby","style","marginBottom","Typography","component","TextField","label","required","type","margin","boxSizing","value","onChange","event","target","marginTop","color","marginRight","disabled","addIngredientModalStyle","IngredientSelector","props","addingIngredient","setAddingIngredient","maxHeight","overflowY","formattedIngredient","amount","notes","handleSelectIngredient","Number","alignSelf","onSelectIngredient","editMealModalStyle","Meals","setMeals","setNewMeal","isAddingIngredient","setIsAddingIngredient","currentMealIngredients","setCurrentMealIngredients","isFetching","setIsFetching","loadMeals","fetchIngredientsNames","Promise","all","currentIngredient","then","newIngredients","handleDeleteMeal","handleMealSave","kilocalories","preparation","length","secondary","alignItems","dense","ListItemButton","filteredItems","currentIng","currentIngredients","push","CategorySelector","setCategories","loadCategories","category","onSelectCategory","handleSelectCategory","MealSelector","onSelectMeal","handleSelectMeal","editDietModalStyle","Diets","diets","setDiets","setNewDiet","isAddingCategory","setIsAddingCategory","isAddingMeal","setIsAddingMeal","loadDiets","fetchDiet","diet","handleDeleteDiet","handleDietSave","description","currentCategory","formattedMeals","currentIndex","currentCategories","currentMeals","TabPanel","children","other","role","hidden","Box","a11yProps","Configurator","setValue","Container","maxWidth","borderBottom","borderColor","Tabs","newValue","Tab","Routes","emailRegex","baseUrl","URLs","login","biometric","signup","dashboard","user","LoginForm","email","setEmail","password","setPassword","browserHistory","useHistory","Card","CardContent","textAlign","isEmailValid","match","validateEmail","isPasswordValid","validatePassword","CardActions","padding","size","requestOptions","method","headers","body","JSON","stringify","fetch","json","localStorage","setItem","Login","localStorageUser","getItem","parse","backgroundColor","Grid","container","spacing","direction","minHeight","item","xs","href","SignupForm","firstName","setFirstName","lastName","setLastName","phone","setPhone","confirmEmail","setConfirmEmail","confirmPassword","setConfirmPassword","marginLeft","catch","Signup","icon","fontSize","checkedIcon","SearchBar","dietCategories","setDietCategories","flexGrow","sm","fullWidth","updateDietNameSearch","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","selected","Checkbox","checked","renderInput","params","placeholder","updateDietCategoriesSearch","DietCard","minWidth","CardHeader","title","MealsList","caloriesMsg","ListItemAvatar","Avatar","DietInfoCard","setUser","parsedUser","avatar","isUser","handleAddDietClick","localUser","overflow","CardMedia","height","image","Stack","Tooltip","arrow","gutterBottom","mb","Chip","SearchResults","isDialogOpen","setIsDialogOpen","activeDiet","setActiveDiet","searchResults","setSearchResults","isFetchExecuting","setIsFetchExecuting","executeQuery","queryString","list","short_diet","dietCategoriesSearch","forEach","dietNameSearch","encodeURIComponent","fetchAPI","CircularProgress","Dialog","md","handleDialogOpen","Search","setDietNameSearch","setDietCategoriesSearch","handleSearchActivation","newDietNameSearch","newDietCategoriesSearch","isSearchActive","StyledSliderItem","styled","div","slideMargin","visibleSlides","zoomFactor","SliderItem","slideClass","callback","callbackOut","className","onMouseOver","onMouseOut","StyledSliderWrapper","StyledSlider","pageTransition","transformValue","Slider","maxVisibleSlides","currentPage","setCurrentPage","setTransformValue","scrollSize","setScrollSize","sliderRef","useRef","windowWidth","numberOfSlides","totalPages","Math","ceil","ResizeObserver","entries","contentRect","observe","current","handleSlideMove","forward","pointerEvents","setTimeout","handleMouseOver","handleMouseOut","assignSlideClass","ref","child","i","DietsList","Browse","dietCategory","setIsSearchActive","searchStatus","Alert","elevation","AddBiometric","weight","setWeight","setHeight","fatIndex","setFatIndex","errorOpen","setErrorOpen","e","parseInt","userId","ok","close","Snackbar","autoHideDuration","severity","Dashboard","addBiometricOpen","setAddBiometricOpen","lastestWeight","setLastestWeight","lastestHeight","setLastestHeight","lastestCaloriesConsumed","setLastestCaloriesConsumed","lastestFatIndex","setLastestFatIndex","labels","datasets","borderWidth","setData","scales","y","beginAtZero","suggestedMin","suggestedMax","setOptions","setDiet","latestBiometrics","caloriesConsumed","dates","biometricHistory","bio","date","substring","weights","min","max","status","console","log","flexDirection","Divider","NavTabs","customerTabs","adminTabs","defaultTabs","userType","renderTabs","AccountMenu","anchorEl","setAnchorEl","handleClose","currentTarget","ml","src","Menu","PaperProps","mt","mr","content","right","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","cursor","ListItemIcon","removeItem","CustomAppBar","AppBar","Toolbar","Help","MealCard","MealInfoCard","setMeal","primaryText","DietPage","useLocation","pathname","split","activeMealId","setActiveMealId","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6a59e30.chunk.js","sourcesContent":["import { Ingredient, IngredientResponse } from \"../types/ingredient\";\n\nimport axios from \"axios\";\nimport { Meal, MealResponse } from \"../types/meal\";\nimport { Diet, DietResponse, Diet_all } from \"../types/diet\";\nimport {\n  DietCategory,\n  DietCategoryResponse,\n} from \"../../browse/types/DietCategory\";\n\nexport type Maybe<T> = T | null;\n\n// INGREDIENTS\n\nexport const getIngredient = async (\n  ingredientId: string\n): Promise<Ingredient> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/ingredient/\" +\n      ingredientId\n  );\n  return response.data;\n};\n\nexport const getIngredients = async (): Promise<Ingredient[]> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/ingredient?Page=1&PageSize=100\"\n  );\n  const data = response.data as IngredientResponse;\n  return data.pagination;\n};\n\nexport const updateIngredient = async (\n  id: string,\n  newIngredient: Partial<Ingredient>\n): Promise<boolean> => {\n  try {\n    await axios.put(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/ingredient/\" +\n        id,\n      { name: newIngredient.name }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const createIngredient = async (\n  newIngredient: Partial<Ingredient>\n): Promise<boolean> => {\n  try {\n    await axios.post(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/ingredient\",\n      { name: newIngredient.name }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const deleteIngredient = async (\n  ingredientId: string\n): Promise<boolean> => {\n  try {\n    await axios.delete(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/ingredient/\" +\n        ingredientId\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n// MEALS\n\nexport const getMeals = async (): Promise<Meal[]> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/meal?Page=1&PageSize=100\"\n  );\n  const data = response.data as MealResponse;\n  return data.pagination;\n};\n\nexport const updateMeal = async (\n  id: string,\n  newMeal: Partial<Meal>\n): Promise<boolean> => {\n  delete newMeal.id;\n  newMeal.mealIngredients?.filter((ing) => delete ing.name);\n  try {\n    await axios.put(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/meal/\" + id,\n      { ...newMeal }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const createMeal = async (newMeal: Partial<Meal>): Promise<boolean> => {\n  delete newMeal.id;\n  newMeal.mealIngredients?.filter((ing) => delete ing.name);\n  try {\n    await axios.post(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/meal\",\n      { ...newMeal }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const deleteMeal = async (mealId: string): Promise<boolean> => {\n  try {\n    await axios.delete(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/meal/\" +\n        mealId\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n// DIETS\n\nexport const getDiets = async (): Promise<Diet_all[]> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/diet?Page=1&PageSize=100\"\n  );\n  const data = response.data as DietResponse;\n  return data.pagination;\n};\n\nexport const getDiet = async (dietId: string): Promise<Diet> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/diet/\" + dietId\n  );\n  return response.data;\n};\n\nexport const updateDiet = async (\n  id: string,\n  newDiet: Partial<Diet>\n): Promise<boolean> => {\n  delete newDiet.id;\n  delete newDiet.imageRef;\n  const categoryIds = newDiet.categories?.map((cat) => cat.id);\n  delete newDiet.categories;\n  const dietMeals = newDiet.meals?.map((meal, index) => {\n    return {\n      id: meal.id,\n      mealNumber: index,\n    };\n  });\n  delete newDiet.meals;\n  try {\n    await axios.put(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/diet/\" + id,\n      { ...newDiet, categoryIds, dietMeals }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const createDiet = async (newDiet: Partial<Diet>): Promise<boolean> => {\n  delete newDiet.id;\n  delete newDiet.imageRef;\n  const categoryIds = newDiet.categories?.map((cat) => cat.id);\n  delete newDiet.categories;\n  const dietMeals = newDiet.meals?.map((meal, index) => {\n    return {\n      id: meal.id,\n      mealNumber: index,\n    };\n  });\n  delete newDiet.meals;\n  try {\n    await axios.post(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/diet\",\n      { ...newDiet, categoryIds, dietMeals }\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const deleteDiet = async (dietId: string): Promise<boolean> => {\n  try {\n    await axios.delete(\n      \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/diet/\" +\n        dietId\n    );\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n// CATEGORIES\n\nexport const getCategories = async (): Promise<DietCategory[]> => {\n  const response = await axios.get(\n    \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com/category?Page=1&PageSize=100\"\n  );\n  const data = response.data as DietCategoryResponse;\n  return data.pagination;\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Ingredient } from \"../../../general/types/ingredient\";\nimport {\n  createIngredient,\n  deleteIngredient,\n  getIngredients,\n  Maybe,\n  updateIngredient,\n} from \"../../../general/utils/utils\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nconst editIngredientModalStyle = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"white\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function Ingredients() {\n  const [ingredients, setIngredients] = React.useState<\n    Ingredient[] | undefined\n  >(undefined);\n  const [newIngredient, setNewIngredient] =\n    React.useState<Maybe<Partial<Ingredient>>>(null);\n  const [isEditing, setIsEditing] = React.useState(false);\n\n  const loadIngredients = async () => {\n    const ingredients = await getIngredients();\n    setIngredients(ingredients);\n  };\n\n  const isIngredientComplete = (ingredient: Partial<Ingredient>) => {\n    return ingredient.name;\n  };\n\n  useEffect(() => {\n    loadIngredients();\n  }, []);\n\n  const handleDeleteIngredient = async () => {\n    if (!newIngredient || !newIngredient.id) {\n      return;\n    }\n\n    const success = await deleteIngredient(newIngredient.id);\n\n    if (success) {\n      setIsEditing(false);\n      setNewIngredient(null);\n      window.location.reload();\n    } else {\n      alert(\"Couldn't delete ingredient. Please try again later.\");\n    }\n  };\n\n  const handleIngredientSave = async () => {\n    if (!newIngredient || !isIngredientComplete(newIngredient)) {\n      return;\n    }\n\n    if (isEditing) {\n      if (!newIngredient.id) {\n        return;\n      }\n\n      const success = await updateIngredient(newIngredient.id, newIngredient);\n\n      if (success) {\n        setIsEditing(false);\n        setNewIngredient(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't save ingredient. Please try again later.\");\n      }\n    } else {\n      const success = await createIngredient(newIngredient);\n\n      if (success) {\n        setNewIngredient(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't save ingredient. Please try again later.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            setNewIngredient({\n              name: \"\",\n            })\n          }\n        >\n          New ingredient\n        </Button>\n      </Box>\n      <List>\n        {ingredients &&\n          ingredients.map((ingredient, index) => {\n            return (\n              <ListItem\n                key={`ingredient-${index}-id`}\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      setIsEditing(true);\n                      setNewIngredient(ingredient);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemText primary={ingredient.name} />\n              </ListItem>\n            );\n          })}\n      </List>\n      <Modal\n        open={Boolean(newIngredient)}\n        onClose={() => {\n          setIsEditing(false);\n          setNewIngredient(null);\n        }}\n        aria-labelledby=\"edit-ingredient-modal\"\n      >\n        <Box sx={editIngredientModalStyle}>\n          <div style={{ marginBottom: 16 }}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              {newIngredient?.name}\n            </Typography>\n            <Typography id=\"modal-modal-subtitle\" variant=\"subtitle2\">\n              {newIngredient?.id}\n            </Typography>\n          </div>\n          <TextField\n            id=\"edit-ingredient-name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              margin: \"16px 0px 16px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newIngredient?.name}\n            onChange={(event) =>\n              setNewIngredient({\n                ...newIngredient,\n                name: event.target.value,\n              })\n            }\n          />\n          <Box\n            sx={{\n              justifyContent: \"flex-end\",\n              display: \"flex\",\n              marginTop: \"16px\",\n            }}\n          >\n            {isEditing && (\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                sx={{ marginRight: \"8px\" }}\n                onClick={handleDeleteIngredient}\n              >\n                Delete\n              </Button>\n            )}\n            <Button\n              variant=\"contained\"\n              onClick={handleIngredientSave}\n              disabled={!newIngredient?.name}\n            >\n              {isEditing ? \"Save\" : \"Create\"}\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport { Ingredient, MealIngredient } from \"../../../general/types/ingredient\";\nimport { getIngredients, Maybe } from \"../../../general/utils/utils\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\ninterface IngredientSelectorProps {\n  onSelectIngredient: (ingredient: MealIngredient) => void;\n}\n\nconst addIngredientModalStyle = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"white\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const IngredientSelector = (props: IngredientSelectorProps) => {\n  const [ingredients, setIngredients] =\n    React.useState<Maybe<Ingredient[]>>(null);\n  const [addingIngredient, setAddingIngredient] =\n    React.useState<Maybe<MealIngredient>>(null);\n\n  const loadIngredients = async () => {\n    const ingredients = await getIngredients();\n    setIngredients(ingredients);\n  };\n\n  useEffect(() => {\n    loadIngredients();\n  }, []);\n\n  const handleSelectIngredient = (ingredient: Ingredient) => {\n    const formattedIngredient: MealIngredient = {\n      ingredientId: ingredient.id,\n      name: ingredient.name,\n      amount: 0,\n      notes: \"\",\n    };\n    setAddingIngredient(formattedIngredient);\n    // props.onSelectIngredient(ingredient);\n  };\n\n  return (\n    <>\n      <Box sx={{ maxHeight: \"500px\", overflowY: \"auto\" }}>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"16px\" }}>\n          Ingredients\n        </Typography>\n        <List>\n          {ingredients &&\n            ingredients.map((ingredient, index) => {\n              return (\n                <ListItem\n                  key={`ingredient-${index}-id`}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => handleSelectIngredient(ingredient)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText primary={ingredient.name} />\n                </ListItem>\n              );\n            })}\n        </List>\n      </Box>\n      <Modal\n        open={Boolean(addingIngredient)}\n        onClose={() => {\n          setAddingIngredient(null);\n        }}\n        aria-labelledby=\"add-ingredient-modal\"\n      >\n        <>\n          {addingIngredient && (\n            <Box sx={addIngredientModalStyle}>\n              <Typography variant=\"h5\" style={{ marginBottom: 16 }}>\n                {addingIngredient.name}\n              </Typography>\n              <Box>\n                <TextField\n                  type=\"number\"\n                  label=\"Quantity\"\n                  required\n                  sx={{\n                    width: \"100%\",\n                    margin: \"8px 0px 8px 0px\",\n                    boxSizing: \"border-box\",\n                  }}\n                  onChange={(event) => {\n                    setAddingIngredient({\n                      ...addingIngredient,\n                      amount: Number(event.target.value),\n                    });\n                  }}\n                />\n                <TextField\n                  type=\"text\"\n                  label=\"Notes\"\n                  sx={{\n                    width: \"100%\",\n                    margin: \"8px 0px 8px 0px\",\n                    boxSizing: \"border-box\",\n                  }}\n                  onChange={(event) => {\n                    setAddingIngredient({\n                      ...addingIngredient,\n                      notes: event.target.value,\n                    });\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  justifyContent: \"flex-end\",\n                  display: \"flex\",\n                  marginTop: \"16px\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  sx={{ alignSelf: \"flex-end\" }}\n                  onClick={() => {\n                    props.onSelectIngredient(addingIngredient);\n                  }}\n                  disabled={!addingIngredient.amount}\n                >\n                  Add\n                </Button>\n              </Box>\n            </Box>\n          )}\n        </>\n      </Modal>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Meal } from \"../../../general/types/meal\";\nimport {\n  createMeal,\n  deleteMeal,\n  getIngredient,\n  getMeals,\n  Maybe,\n  updateMeal,\n} from \"../../../general/utils/utils\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { IngredientSelector } from \"./IngredientSelector\";\nimport { MealIngredient } from \"../../../general/types/ingredient\";\n\nconst editMealModalStyle = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"white\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function Meals() {\n  const [meals, setMeals] = React.useState<Maybe<Meal[]>>(null);\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [newMeal, setNewMeal] = React.useState<Maybe<Partial<Meal>>>(null);\n  const [isAddingIngredient, setIsAddingIngredient] = React.useState(false);\n  const [currentMealIngredients, setCurrentMealIngredients] =\n    React.useState<Maybe<MealIngredient[]>>(null);\n  const [isFetching, setIsFetching] = React.useState(false);\n\n  const loadMeals = async () => {\n    const meals = await getMeals();\n    setMeals(meals);\n  };\n\n  const fetchIngredientsNames = async () => {\n    if (newMeal && currentMealIngredients) {\n      setIsFetching(true);\n      Promise.all(\n        currentMealIngredients.map(async (currentIngredient) => {\n          let ingredient = await getIngredient(currentIngredient.ingredientId);\n          return {\n            ...currentIngredient,\n            name: ingredient.name,\n          };\n        })\n      ).then((newIngredients) => {\n        if (newIngredients) {\n          setCurrentMealIngredients(newIngredients);\n          setIsFetching(false);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    !isFetching && fetchIngredientsNames();\n  }, [currentMealIngredients]);\n\n  useEffect(() => {\n    loadMeals();\n  }, []);\n\n  const isMealComplete = (meal: Partial<Meal>) => {\n    return (\n      meal.name &&\n      meal.kilocalories &&\n      meal.preparation &&\n      meal.mealIngredients &&\n      meal.mealIngredients.length > 0\n    );\n  };\n\n  const handleDeleteMeal = async () => {\n    if (!newMeal || !newMeal.id) {\n      return;\n    }\n\n    const success = await deleteMeal(newMeal.id);\n\n    if (success) {\n      setIsEditing(false);\n      setNewMeal(null);\n      window.location.reload();\n    } else {\n      alert(\"Couldn't delete meal. Please try again later.\");\n    }\n  };\n\n  const handleMealSave = async () => {\n    if (!newMeal || !isMealComplete(newMeal)) {\n      alert(\"Please fill out all of the required fields.\");\n      return;\n    }\n\n    if (isEditing) {\n      if (!newMeal.id) {\n        return;\n      }\n\n      const success = await updateMeal(newMeal.id, newMeal);\n\n      if (success) {\n        setIsEditing(false);\n        setNewMeal(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't save meal. Please try again later.\");\n      }\n    } else {\n      const success = await createMeal(newMeal);\n      if (success) {\n        setNewMeal(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't create meal. Please try again later.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setCurrentMealIngredients(null);\n            setNewMeal({\n              name: \"\",\n            });\n          }}\n        >\n          New meal\n        </Button>\n      </Box>\n      <List>\n        {meals &&\n          meals.map((meal, index) => {\n            return (\n              <ListItem\n                key={`meal-${index}-id`}\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      setIsEditing(true);\n                      setCurrentMealIngredients(meal.mealIngredients);\n                      setNewMeal(meal);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemText\n                  primary={meal.name}\n                  secondary={meal.kilocalories + \" kcal\"}\n                />\n              </ListItem>\n            );\n          })}\n      </List>\n      <Modal\n        open={Boolean(newMeal)}\n        onClose={() => {\n          setIsEditing(false);\n          setNewMeal(null);\n          setCurrentMealIngredients(null);\n        }}\n        aria-labelledby=\"meal-modal\"\n      >\n        <Box\n          sx={editMealModalStyle}\n          style={{ maxHeight: 600, overflowY: \"auto\" }}\n        >\n          <div style={{ marginBottom: 16 }}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              {newMeal?.name}\n            </Typography>\n            <Typography id=\"modal-modal-subtitle\" variant=\"subtitle2\">\n              {newMeal?.id}\n            </Typography>\n          </div>\n          <TextField\n            id=\"meal-name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              margin: \"8px 0px 8px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newMeal?.name}\n            onChange={(event) =>\n              setNewMeal({\n                ...newMeal,\n                name: event.target.value,\n              })\n            }\n          />\n          <TextField\n            id=\"meal-kcals-input\"\n            label=\"Kilocalories\"\n            variant=\"outlined\"\n            required\n            type=\"number\"\n            sx={{\n              width: \"100%\",\n              margin: \"8px 0px 8px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newMeal?.kilocalories}\n            onChange={(event) =>\n              setNewMeal({\n                ...newMeal,\n                kilocalories: Number(event.target.value),\n              })\n            }\n          />\n          <TextField\n            id=\"meal-preparation-input\"\n            label=\"Preparation\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              margin: \"8px 0px 8px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newMeal?.preparation}\n            onChange={(event) =>\n              setNewMeal({\n                ...newMeal,\n                preparation: event.target.value,\n              })\n            }\n          />\n          <Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Typography>Ingredients</Typography>\n              <IconButton onClick={() => setIsAddingIngredient(true)}>\n                <AddIcon />\n              </IconButton>\n            </Box>\n            <List dense>\n              {newMeal &&\n                currentMealIngredients &&\n                currentMealIngredients.map((ing, index) => {\n                  return (\n                    <ListItem\n                      key={`ing-${index}-id`}\n                      dense\n                      secondaryAction={\n                        <ListItemButton\n                          onClick={() => {\n                            let filteredItems = currentMealIngredients!.filter(\n                              (currentIng) =>\n                                ing.ingredientId !== currentIng.ingredientId\n                            );\n                            setCurrentMealIngredients(filteredItems);\n                            setNewMeal({\n                              ...newMeal,\n                              mealIngredients: filteredItems!,\n                            });\n                          }}\n                        >\n                          <DeleteIcon />\n                        </ListItemButton>\n                      }\n                    >\n                      <ListItemText\n                        primary={ing.name}\n                        secondary={\n                          ing.amount + (ing.notes ? \" · \" + ing.notes : \"\")\n                        }\n                      />\n                    </ListItem>\n                  );\n                })}\n            </List>\n          </Box>\n          <Box\n            sx={{\n              justifyContent: \"flex-end\",\n              display: \"flex\",\n              marginTop: \"16px\",\n            }}\n          >\n            {isEditing && (\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                sx={{ marginRight: \"8px\" }}\n                onClick={handleDeleteMeal}\n              >\n                Delete\n              </Button>\n            )}\n            <Button\n              variant=\"contained\"\n              sx={{ alignSelf: \"flex-end\" }}\n              onClick={handleMealSave}\n              disabled={!newMeal?.name}\n            >\n              {isEditing ? \"Save\" : \"Create\"}\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <Modal\n        open={isAddingIngredient}\n        onClose={() => {\n          setIsAddingIngredient(false);\n        }}\n        aria-labelledby=\"add-ingredient-modal\"\n      >\n        <Box sx={editMealModalStyle}>\n          <IngredientSelector\n            onSelectIngredient={(ingredient) => {\n              let currentIngredients = currentMealIngredients;\n              if (currentIngredients) {\n                currentIngredients.push(ingredient);\n              } else {\n                currentIngredients = [ingredient];\n              }\n              setCurrentMealIngredients(currentIngredients);\n              setNewMeal({\n                ...newMeal,\n                mealIngredients: currentIngredients!,\n              });\n              setIsAddingIngredient(false);\n            }}\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport { getCategories, Maybe } from \"../../../general/utils/utils\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { DietCategory } from \"../../../browse/types/DietCategory\";\n\ninterface CategorySelectorProps {\n  onSelectCategory: (category: DietCategory) => void;\n}\n\nexport const CategorySelector = (props: CategorySelectorProps) => {\n  const [categories, setCategories] =\n    React.useState<Maybe<DietCategory[]>>(null);\n\n  const loadCategories = async () => {\n    const categories = await getCategories();\n    setCategories(categories);\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const handleSelectCategory = (category: DietCategory) => {\n    props.onSelectCategory(category);\n  };\n\n  return (\n    <>\n      <Box sx={{ maxHeight: \"500px\", overflowY: \"auto\" }}>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"16px\" }}>\n          Categories\n        </Typography>\n        <List>\n          {categories &&\n            categories.map((category, index) => {\n              return (\n                <ListItem\n                  key={`category-${index}-id`}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => handleSelectCategory(category)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText primary={category.name} />\n                </ListItem>\n              );\n            })}\n        </List>\n      </Box>\n    </>\n  );\n};\n","import {\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport { getMeals, Maybe } from \"../../../general/utils/utils\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { Meal } from \"../../../general/types/meal\";\n\ninterface MealSelectorProps {\n  onSelectMeal: (meal: Meal) => void;\n}\n\nexport const MealSelector = (props: MealSelectorProps) => {\n  const [meals, setMeals] = React.useState<Maybe<Meal[]>>(null);\n\n  const loadMeals = async () => {\n    const meals = await getMeals();\n    setMeals(meals);\n  };\n\n  useEffect(() => {\n    loadMeals();\n  }, []);\n\n  const handleSelectMeal = (meal: Meal) => {\n    props.onSelectMeal(meal);\n  };\n\n  return (\n    <>\n      <Box sx={{ maxHeight: \"500px\", overflowY: \"auto\" }}>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"16px\" }}>\n          Meals\n        </Typography>\n        <List>\n          {meals &&\n            meals.map((meal, index) => {\n              return (\n                <ListItem\n                  key={`meal-${index}-id`}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={() => handleSelectMeal(meal)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText primary={meal.name} />\n                </ListItem>\n              );\n            })}\n        </List>\n      </Box>\n    </>\n  );\n};\n","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport React, { useEffect } from \"react\";\nimport { Diet, Diet_all } from \"../../../general/types/diet\";\nimport {\n  createDiet,\n  deleteDiet,\n  getDiet,\n  getDiets,\n  Maybe,\n  updateDiet,\n} from \"../../../general/utils/utils\";\nimport { CategorySelector } from \"./CategoySelector\";\nimport { MealSelector } from \"./MealSelector\";\n\nconst editDietModalStyle = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"white\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function Diets() {\n  const [diets, setDiets] = React.useState<Maybe<Diet_all[]>>(null);\n  const [newDiet, setNewDiet] = React.useState<Maybe<Partial<Diet>>>(null);\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [isAddingCategory, setIsAddingCategory] = React.useState(false);\n  const [isAddingMeal, setIsAddingMeal] = React.useState(false);\n\n  const loadDiets = async () => {\n    const diets = await getDiets();\n    setDiets(diets);\n  };\n\n  useEffect(() => {\n    loadDiets();\n  }, []);\n\n  const fetchDiet = async (id: string) => {\n    const diet = await getDiet(id);\n    if (diet) {\n      setNewDiet({ ...diet, id });\n    }\n  };\n\n  const isDietComplete = (diet: Partial<Diet>) => {\n    return (\n      diet.name &&\n      diet.description &&\n      diet.imageRef &&\n      diet.categories &&\n      diet.categories.length > 0 &&\n      diet.meals &&\n      diet.meals.length > 0\n    );\n  };\n\n  const handleDeleteDiet = async () => {\n    if (!newDiet || !newDiet.id) {\n      return;\n    }\n    const success = await deleteDiet(newDiet.id);\n    if (success) {\n      setIsEditing(false);\n      setNewDiet(null);\n      window.location.reload();\n    } else {\n      alert(\"Couldn't delete diet. Please try again later.\");\n    }\n  };\n\n  const handleDietSave = async () => {\n    if (!newDiet || !isDietComplete(newDiet)) {\n      alert(\"Please fill out all of the required fields.\");\n      return;\n    }\n\n    if (isEditing) {\n      if (!newDiet.id) {\n        return;\n      }\n\n      const success = await updateDiet(newDiet.id, newDiet);\n\n      if (success) {\n        setIsEditing(false);\n        setNewDiet(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't save diet. Please try again later.\");\n      }\n    } else {\n      const success = await createDiet(newDiet);\n      if (success) {\n        setNewDiet(null);\n        window.location.reload();\n      } else {\n        alert(\"Couldn't create diet. Please try again later.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setNewDiet({\n              name: \"\",\n              imageRef: \"missing\",\n            });\n          }}\n        >\n          New diet\n        </Button>\n      </Box>\n      <List>\n        {diets &&\n          diets.map((diet, index) => {\n            return (\n              <ListItem\n                key={`diet-${index}-id`}\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      setIsEditing(true);\n                      fetchDiet(diet.id);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                }\n              >\n                <ListItemText primary={diet.name} />\n              </ListItem>\n            );\n          })}\n      </List>\n      <Modal\n        open={Boolean(newDiet)}\n        onClose={() => {\n          setIsEditing(false);\n          setNewDiet(null);\n        }}\n        aria-labelledby=\"diet-modal\"\n      >\n        <Box\n          sx={editDietModalStyle}\n          style={{ maxHeight: 600, overflowY: \"auto\" }}\n        >\n          <div style={{ marginBottom: 16 }}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              {newDiet?.name}\n            </Typography>\n            <Typography id=\"modal-modal-subtitle\" variant=\"subtitle2\">\n              {newDiet?.id}\n            </Typography>\n          </div>\n          <TextField\n            id=\"diet-name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              margin: \"8px 0px 8px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newDiet?.name}\n            onChange={(event) =>\n              setNewDiet({\n                ...newDiet,\n                name: event.target.value,\n              })\n            }\n          />\n          <TextField\n            id=\"diet-description-input\"\n            label=\"Description\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              margin: \"8px 0px 8px 0px\",\n              boxSizing: \"border-box\",\n            }}\n            value={newDiet?.description}\n            onChange={(event) =>\n              setNewDiet({\n                ...newDiet,\n                description: event.target.value,\n              })\n            }\n          />\n          <Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Typography>Categories</Typography>\n              <IconButton onClick={() => setIsAddingCategory(true)}>\n                <AddIcon />\n              </IconButton>\n            </Box>\n            <List dense>\n              {newDiet &&\n                newDiet.categories &&\n                newDiet.categories.map((category, index) => {\n                  return (\n                    <ListItem\n                      key={`category-${index}-id`}\n                      dense\n                      secondaryAction={\n                        <ListItemButton\n                          onClick={() => {\n                            let filteredItems = newDiet.categories!.filter(\n                              (currentCategory) =>\n                                category.id !== currentCategory.id\n                            );\n                            setNewDiet({\n                              ...newDiet,\n                              categories: filteredItems!,\n                            });\n                          }}\n                        >\n                          <DeleteIcon />\n                        </ListItemButton>\n                      }\n                    >\n                      <ListItemText primary={category.name} />\n                    </ListItem>\n                  );\n                })}\n            </List>\n          </Box>\n          <Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Typography>Meals</Typography>\n              <IconButton onClick={() => setIsAddingMeal(true)}>\n                <AddIcon />\n              </IconButton>\n            </Box>\n            <List dense>\n              {newDiet &&\n                newDiet.meals &&\n                newDiet.meals.map((meal, index) => {\n                  return (\n                    <ListItem\n                      key={`meal-${index}-id`}\n                      dense\n                      secondaryAction={\n                        <ListItemButton\n                          onClick={() => {\n                            const formattedMeals = newDiet.meals?.filter(\n                              (meal, currentIndex) => index !== currentIndex\n                            );\n                            setNewDiet({ ...newDiet, meals: formattedMeals });\n                          }}\n                        >\n                          <DeleteIcon />\n                        </ListItemButton>\n                      }\n                    >\n                      <ListItemText\n                        primary={meal.name}\n                        secondary={meal.kilocalories + \" kcal\"}\n                      />\n                    </ListItem>\n                  );\n                })}\n            </List>\n          </Box>\n          <Box\n            sx={{\n              justifyContent: \"flex-end\",\n              display: \"flex\",\n              marginTop: \"16px\",\n            }}\n          >\n            {isEditing && (\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                sx={{ marginRight: \"8px\" }}\n                onClick={handleDeleteDiet}\n              >\n                Delete\n              </Button>\n            )}\n            <Button\n              variant=\"contained\"\n              sx={{ alignSelf: \"flex-end\" }}\n              onClick={handleDietSave}\n              disabled={!newDiet?.name}\n            >\n              {isEditing ? \"Save\" : \"Create\"}\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <Modal\n        open={isAddingCategory}\n        onClose={() => {\n          setIsAddingCategory(false);\n        }}\n        aria-labelledby=\"add-category-modal\"\n      >\n        <Box sx={editDietModalStyle}>\n          <CategorySelector\n            onSelectCategory={(category) => {\n              let currentCategories = newDiet?.categories;\n              if (currentCategories) {\n                currentCategories.push(category);\n              } else {\n                currentCategories = [category];\n              }\n              setNewDiet({\n                ...newDiet,\n                categories: currentCategories!,\n              });\n              setIsAddingCategory(false);\n            }}\n          />\n        </Box>\n      </Modal>\n      <Modal\n        open={isAddingMeal}\n        onClose={() => {\n          setIsAddingMeal(false);\n        }}\n        aria-labelledby=\"add-meal-modal\"\n      >\n        <Box sx={editDietModalStyle}>\n          <MealSelector\n            onSelectMeal={(meal) => {\n              let currentMeals = newDiet?.meals;\n              if (currentMeals) {\n                currentMeals.push(meal);\n              } else {\n                currentMeals = [meal];\n              }\n              setNewDiet({\n                ...newDiet,\n                meals: currentMeals!,\n              });\n              setIsAddingMeal(false);\n            }}\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Container, Box, Tabs, Tab, Typography } from \"@mui/material\";\nimport Ingredients from \"./Ingredients/Ingredients\";\nimport Meals from \"./Meals/Meals\";\nimport Diets from \"./Diets/Diets\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function Configurator() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <h1>Configurator</h1>\n      <Box sx={{ width: \"100%\" }}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab label=\"Ingredients\" {...a11yProps(0)} />\n            <Tab label=\"Meals\" {...a11yProps(1)} />\n            <Tab label=\"Diets\" {...a11yProps(2)} />\n          </Tabs>\n        </Box>\n        <TabPanel value={value} index={0}>\n          <Ingredients />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Meals />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Diets />\n        </TabPanel>\n      </Box>\n    </Container>\n  );\n}\n","export const Routes = {\n  login: \"/login\",\n  signup: \"/signup\",\n  customerDashboard: \"/dashboard\",\n  customerBrowse: \"/browse\",\n  help: \"/help\",\n  adminConfigurator: \"/admin/configurator\",\n  diets: \"/diets\",\n};\n","export const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/","const baseUrl = \"http://algofit-qa-alb-599938117.us-east-1.elb.amazonaws.com\";\n\nexport const URLs = {\n  login: baseUrl + \"/login\",\n  biometric: baseUrl + \"/biometric\",\n  signup: baseUrl + \"/signup\",\n  category: baseUrl + \"/category\",\n  diet: baseUrl + \"/diet\",\n  dashboard: baseUrl + \"/dashboard\",\n  meal: baseUrl + \"/meal\",\n  user: baseUrl + \"/profile\",\n};\n","import { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport { emailRegex } from \"../utils/regex\";\nimport { URLs } from \"../../general/utils/urls\";\nimport { useHistory } from \"react-router\";\nimport { Routes } from \"../../general/utils/routes\";\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const browserHistory = useHistory();\n\n  const validateEmail = (email: string) => {\n    const isEmailValid = email.match(emailRegex);\n    setEmail(isEmailValid ? email : undefined);\n  };\n\n  const validatePassword = (password: string) => {\n    const isPasswordValid = password.length <= 24; // password.length >= 8 &&\n    setPassword(isPasswordValid ? password : undefined);\n  };\n\n  const attemptLogin = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password }),\n    };\n\n    fetch(URLs.login, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        if (typeof data === \"string\") {\n          alert(\"Error. Usuario inválido.\");\n        } else {\n          localStorage.setItem(\"user\", JSON.stringify(data));\n          if (data.type === \"Customer\") {\n            browserHistory.push(Routes.customerDashboard);\n          } else {\n            browserHistory.push(Routes.adminConfigurator);\n          }\n        }\n      });\n  };\n\n  return (\n    <Card>\n      <CardContent sx={{ boxSizing: \"border-box\", width: 450 }}>\n        <div style={{ marginBottom: \"16px\" }}>\n          <Typography color=\"text.primary\" variant=\"h5\" textAlign=\"center\">\n            Welcome to AlgoFit!\n          </Typography>\n          <Typography\n            color=\"text.secondary\"\n            variant=\"subtitle1\"\n            textAlign=\"center\"\n          >\n            Please enter your credentials\n          </Typography>\n        </div>\n        <TextField\n          id=\"login-email-input\"\n          label=\"Email\"\n          variant=\"outlined\"\n          required\n          type=\"email\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={email}\n          onChange={(event) => validateEmail(event.target.value)}\n        />\n        <TextField\n          id=\"login-password-input\"\n          label=\"Password\"\n          variant=\"outlined\"\n          required\n          type=\"password\"\n          sx={{ width: \"100%\" }}\n          value={password}\n          onChange={(event) => validatePassword(event.target.value)}\n        />\n      </CardContent>\n      <CardActions\n        sx={{ justifyContent: \"flex-end\", padding: \"0px 16px 16px 16px\" }}\n      >\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          disabled={!(email && password)}\n          onClick={attemptLogin}\n        >\n          Login\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { Container, Grid, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { User } from \"../../general/types/user\";\nimport { Routes } from \"../../general/utils/routes\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function Login() {\n  const browserHistory = useHistory();\n\n  useEffect(() => {\n    const localStorageUser = localStorage.getItem(\"user\");\n    if (!localStorageUser) {\n      return;\n    }\n    const user = JSON.parse(localStorageUser) as User;\n    if (user) {\n      if (user.type === \"Customer\") {\n        browserHistory.push(Routes.customerDashboard);\n      } else {\n        browserHistory.push(Routes.adminConfigurator);\n      }\n    }\n  });\n\n  return (\n    <div style={{ backgroundColor: \"#F8F8F8\" }}>\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <Grid item xs={3}>\n            <LoginForm />\n            <div style={{ padding: 16 }}>\n              <Typography textAlign=\"center\">\n                Don't have an account yet?\n              </Typography>\n              <Typography textAlign=\"center\">\n                Sign up <a href={Routes.signup}>here</a> or continue as a{\" \"}\n                <a href={Routes.customerBrowse}>guest</a>.\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport { emailRegex } from \"../utils/regex\";\nimport { URLs } from \"../../general/utils/urls\";\nimport { useHistory } from \"react-router\";\nimport { Routes } from \"../../general/utils/routes\";\n\nexport default function SignupForm() {\n  const [firstName, setFirstName] = useState<string | undefined>(undefined);\n  const [lastName, setLastName] = useState<string | undefined>(undefined);\n  const [phone, setPhone] = useState<string | undefined>(undefined);\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [confirmEmail, setConfirmEmail] = useState<string | undefined>(\n    undefined\n  );\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [confirmPassword, setConfirmPassword] = useState<string | undefined>(\n    undefined\n  );\n  const browserHistory = useHistory();\n\n  const validateEmail = (email: string) => {\n    const isEmailValid = email.match(emailRegex);\n    setEmail(isEmailValid ? email : undefined);\n  };\n\n  const validatePassword = (password: string) => {\n    const isPasswordValid = password.length <= 24;\n    setPassword(isPasswordValid ? password : undefined);\n  };\n\n  const attemptSignup = () => {\n    if (email !== confirmEmail) {\n      alert(\"Email doesn't match\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n      return;\n    }\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        phone,\n        email,\n        confirmEmail,\n        password,\n        confirmPassword,\n      }),\n    };\n\n    fetch(URLs.signup, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        if (typeof data === \"string\") {\n          alert(\"Error. Usuario ya existe.\");\n        } else {\n          localStorage.setItem(\"user\", JSON.stringify(data));\n          if (data.type === \"Customer\") {\n            browserHistory.push(Routes.customerDashboard);\n          } else {\n            browserHistory.push(Routes.adminConfigurator);\n          }\n        }\n      })\n      .catch(() => {\n        alert(\"Error. Usuario ya existe.\");\n      });\n  };\n\n  return (\n    <Card>\n      <CardContent sx={{ boxSizing: \"border-box\", width: 450 }}>\n        <div style={{ marginBottom: \"16px\" }}>\n          <Typography color=\"text.primary\" variant=\"h5\" textAlign=\"center\">\n            Welcome to AlgoFit!\n          </Typography>\n          <Typography\n            color=\"text.secondary\"\n            variant=\"subtitle1\"\n            textAlign=\"center\"\n          >\n            You'll be ready in just a minute\n          </Typography>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <TextField\n            id=\"signup-first-name-input\"\n            label=\"First name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              marginBottom: \"8px\",\n              boxSizing: \"border-box\",\n              marginRight: \"4px\",\n            }}\n            value={firstName}\n            onChange={(event) => setFirstName(event.target.value)}\n          />\n          <TextField\n            id=\"signup-last-name-input\"\n            label=\"Last name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            sx={{\n              width: \"100%\",\n              marginBottom: \"8px\",\n              boxSizing: \"border-box\",\n              marginLeft: \"4px\",\n            }}\n            value={lastName}\n            onChange={(event) => setLastName(event.target.value)}\n          />\n        </div>\n        <TextField\n          id=\"signup-phone-input\"\n          label=\"Phone\"\n          variant=\"outlined\"\n          required\n          type=\"tel\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={phone}\n          onChange={(event) => setPhone(event.target.value)}\n        />\n        <TextField\n          id=\"signup-email-input\"\n          label=\"Email\"\n          variant=\"outlined\"\n          required\n          type=\"email\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={email}\n          onChange={(event) => validateEmail(event.target.value)}\n        />\n        <TextField\n          id=\"signup-confirm-email-input\"\n          label=\"Confirm email\"\n          variant=\"outlined\"\n          required\n          type=\"email\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={confirmEmail}\n          onChange={(event) => setConfirmEmail(event.target.value)}\n        />\n        <TextField\n          id=\"signup-password-input\"\n          label=\"Password\"\n          variant=\"outlined\"\n          required\n          type=\"password\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={password}\n          onChange={(event) => validatePassword(event.target.value)}\n        />\n        <TextField\n          id=\"signup-confirm-password-input\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          required\n          type=\"password\"\n          sx={{ width: \"100%\" }}\n          value={confirmPassword}\n          onChange={(event) => setConfirmPassword(event.target.value)}\n        />\n      </CardContent>\n      <CardActions\n        sx={{ justifyContent: \"flex-end\", padding: \"0px 16px 16px 16px\" }}\n      >\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          disabled={\n            !(\n              email &&\n              confirmEmail &&\n              password &&\n              confirmPassword &&\n              firstName &&\n              lastName &&\n              phone\n            )\n          }\n          onClick={attemptSignup}\n        >\n          Signup\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { Container, Grid, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Routes } from \"../../general/utils/routes\";\nimport SignupForm from \"./SignupForm\";\n\nexport default function Signup() {\n  const browserHistory = useHistory();\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      browserHistory.push(Routes.customerDashboard);\n    }\n  });\n\n  return (\n    <div style={{ backgroundColor: \"#F8F8F8\" }}>\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <Grid item xs={3}>\n            <SignupForm />\n            <div style={{ padding: 16 }}>\n              <Typography textAlign=\"center\">\n                Already have an account?\n              </Typography>\n              <Typography textAlign=\"center\">\n                Log in <a href={Routes.login}>here</a>\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport Grid from \"@mui/material/Grid\";\nimport SearchBarProps from \"../interfaces/SearchBarProps\";\nimport { DietCategory } from \"../../types/DietCategory\";\nimport { URLs } from \"../../../general/utils/urls\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function SearchBar(props: SearchBarProps) {\n  const [dietCategories, setDietCategories] = useState<DietCategory[]>([]);\n\n  useEffect(() => {\n    fetch(URLs.category + \"?Page=1&PageSize=100\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDietCategories(data.pagination);\n      });\n  }, []);\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={7}>\n          <TextField\n            fullWidth\n            label=\"Diet name\"\n            color=\"primary\"\n            onChange={(event) => {\n              props.updateDietNameSearch(event.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <Autocomplete\n            multiple\n            id=\"checkboxes-categories-serach\"\n            options={dietCategories}\n            disableCloseOnSelect\n            getOptionLabel={(option) => option.name}\n            renderOption={(props, option, { selected }) => (\n              <li {...props}>\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  style={{ marginRight: 8 }}\n                  checked={selected}\n                />\n                {option.name}\n              </li>\n            )}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Categories\"\n                placeholder=\"Weight loss, Detox, etc.\"\n              />\n            )}\n            onChange={(event, value) => props.updateDietCategoriesSearch(value)}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Diet } from \"../types/diet\";\n\nexport default function DietCard(diet: Diet) {\n  return (\n    <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n      <CardHeader title={diet.name} />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {diet.description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button> See more </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport {Diet} from \"../types/diet\";\n\nexport default function MealsList(diet: Diet) {\n  return (\n    <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\n      {diet.meals.map((meal, index) => {\n        const caloriesMsg = meal.kilocalories + \" kilocalories\";\n        return (\n          <ListItem key={index}>\n            <ListItemAvatar>\n              <Avatar>{index + 1}</Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={meal.name} secondary={caloriesMsg} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button } from \"@mui/material\";\nimport { Diet } from \"../types/diet\";\nimport MealsList from \"./MealsList\";\nimport { Routes } from \"../../general/utils/routes\";\nimport { User } from \"../../general/types/user\";\nimport { URLs } from \"../../general/utils/urls\";\n\nfunction isUser(user: any): user is User {\n  return user.avatar && user.firstName && user.lastName && user.type;\n}\n\nexport default function DietInfoCard(diet: Diet) {\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      const parsedUser = JSON.parse(user);\n      if (isUser(parsedUser)) {\n        fetch(URLs.user + `/${parsedUser.id}`)\n          .then((response) => response.json())\n          .then((data) => {\n            setUser(data);\n          });\n      }\n    }\n  }, [setUser]);\n\n  const handleAddDietClick = () => {\n    let localUser: User = user!;\n    localUser.dietId = diet.id;\n    fetch(URLs.diet + `/${diet.id}/user/${user?.id}`, {\n      method: \"PUT\",\n    });\n    setUser({ ...localUser });\n    localStorage.setItem(\"user\", JSON.stringify(localUser));\n  };\n\n  const getAddDietButton = () => {\n    if (user !== undefined) {\n      if (user.dietId !== diet.id) {\n        return (\n          <Button size=\"small\" color=\"secondary\" onClick={handleAddDietClick}>\n            Add to \"My Diet\"\n          </Button>\n        );\n      } else {\n        return (\n          <Button variant=\"contained\" color=\"success\">\n            This is your Diet!\n          </Button>\n        );\n      }\n    } else {\n      return (\n        <Tooltip title={\"Log in to add a diet\"} arrow>\n          <span>\n            <Button disabled>Add to \"My Diet\"</Button>\n          </span>\n        </Tooltip>\n      );\n    }\n  };\n\n  return (\n    <Card style={{ overflow: \"auto\" }}>\n      <CardMedia component=\"img\" height=\"140\" image={diet.imageRef} />\n      <CardContent>\n        <Stack spacing={2} direction=\"row\">\n          <Button size=\"small\" href={Routes.diets + `/${diet.id}`}>\n            View more\n          </Button>\n          {getAddDietButton()}\n        </Stack>\n\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\n          {diet.name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {diet.description}\n        </Typography>\n        <Box sx={{ mb: 1 }}>\n          <Typography variant=\"h6\" component=\"div\">\n            Diet categories\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            {diet.categories.map((category) => {\n              return (\n                <Tooltip key={category.id} title={category.description} arrow>\n                  <Chip label={category.name} variant=\"outlined\" />\n                </Tooltip>\n              );\n            })}\n          </Stack>\n        </Box>\n        <Typography variant=\"h6\" component=\"div\">\n          Meals in this diet\n        </Typography>\n        <MealsList {...diet} />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Grid from \"@mui/material/Grid\";\nimport DietCard from \"../../../general/components/DietCard\";\nimport {Diet} from \"../../../general/types/diet\";\nimport DietInfoCard from \"../../../general/components/DietInfoCard\";\nimport SearchResultProps from \"../interfaces/SearchResultProps\";\nimport { URLs } from \"../../../general/utils/urls\";\n\nexport default function SearchResults(props: SearchResultProps) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [activeDiet, setActiveDiet] = useState<Diet>({} as Diet);\n\n  const handleDialogOpen = (diet: Diet) => {\n    setIsDialogOpen(true);\n    setActiveDiet(diet);\n  };\n\n  const [searchResults, setSearchResults] = useState<Diet[]>([]);\n  const [isFetchExecuting, setIsFetchExecuting] = useState(false);\n\n  useEffect(() => {\n    let executeQuery = false;\n    let queryString = URLs.diet + \"?Page=1&PageSize=100\";\n    if (props.dietCategoriesSearch.length > 0) {\n      executeQuery = true;\n      props.dietCategoriesSearch.forEach((category) => {\n        queryString += `&categoryIds=${category.id}`;\n      });\n    }\n    if (props.dietNameSearch.length > 0) {\n      executeQuery = true;\n      queryString += `&searchText=${encodeURIComponent(props.dietNameSearch)}`;\n    }\n\n    async function fetchAPI() {\n      let response = await fetch(queryString);\n      let data = await response.json();\n      let list: Diet[] = [];\n      for (const short_diet of data.pagination) {\n        const response = await fetch(URLs.diet + `/${short_diet.id}`);\n        const data = await response.json();\n        data.id = short_diet.id;\n        list.push(data);\n      }\n      setSearchResults(list);\n      setIsFetchExecuting(false);\n    }\n\n    if (executeQuery) {\n      setIsFetchExecuting(true);\n      fetchAPI();\n    }\n  }, [props.dietNameSearch, props.dietCategoriesSearch]);\n\n  return (\n    <>\n      {isFetchExecuting ? (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <CircularProgress />\n        </div>\n      ) : searchResults.length > 0 ? (\n        <>\n          <Dialog onClose={() => setIsDialogOpen(false)} open={isDialogOpen}>\n            <DietInfoCard {...activeDiet} />\n          </Dialog>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Grid container>\n                {searchResults.map((diet) => {\n                  return (\n                    <Grid key={diet.id} item xs={12} sm={4} md={3}>\n                      <div onClick={() => handleDialogOpen(diet)}>\n                        <DietCard {...diet} />\n                      </div>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Box>\n          </div>\n        </>\n      ) : (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <p>No results matched the search criteria...</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport SearchProps from \"../interfaces/SearchProps\";\nimport { DietCategory } from \"../../types/DietCategory\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResults from \"./SearchResults\";\n\nexport default function Search(props: SearchProps) {\n  const [dietNameSearch, setDietNameSearch] = useState<string>(\"\");\n  const [dietCategoriesSearch, setDietCategoriesSearch] = useState<\n    DietCategory[]\n  >([]);\n\n  const updateDietNameSearch = (newDietNameSearch: string) => {\n    setDietNameSearch(newDietNameSearch);\n  };\n\n  const updateDietCategoriesSearch = (\n    newDietCategoriesSearch: DietCategory[]\n  ) => {\n    setDietCategoriesSearch(newDietCategoriesSearch);\n  };\n\n  useEffect(() => {\n    props.handleSearchActivation(\n      dietNameSearch.length > 0 || dietCategoriesSearch?.length > 0\n    );\n  });\n\n  return (\n    <>\n      <h2>Search for a Diet</h2>\n      <SearchBar {...{ updateDietNameSearch, updateDietCategoriesSearch }} />\n      {props.isSearchActive && (\n        <SearchResults {...{ dietNameSearch, dietCategoriesSearch }} />\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\ntype Props = {\n  zoomFactor: number;\n  slideMargin: number;\n  visibleSlides: number;\n  className: string;\n};\n\nexport const StyledSliderItem = styled.div<Props>`\n  margin: 0 ${(props) => props.slideMargin}px;\n  transition: transform 500ms ease;\n  border-radius: 20px;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  transform: scale(1);\n  user-select: none;\n\n  flex: 0 0\n    calc(\n      100% / ${(props) => props.visibleSlides} -\n        ${(props) => props.slideMargin * 2}px\n    );\n\n  img {\n    height: 100%;\n    width: 100%;\n    border-radius: 1.5vw;\n    box-sizing: border-box;\n  }\n\n  :hover {\n    transform: scale(${(props) => props.zoomFactor / 100 + 1}) !important;\n  }\n\n  :hover ~ * {\n    transform: translateX(${(props) => props.zoomFactor / 2 + '%'}) !important;\n  }\n\n  &.left {\n    transform-origin: left;\n\n    :hover ~ * {\n      transform: translateX(${(props) => props.zoomFactor + '%'}) !important;\n    }\n  }\n\n  &.right {\n    transform-origin: right;\n\n    :hover ~ * {\n      transform: translateX(0%) !important;\n    }\n  }\n`;\n","import React from 'react';\n// Styles\nimport { StyledSliderItem } from './SliderItemStyles';\n\ntype SliderItemProps = {\n  slideClass: string;\n  zoomFactor: number;\n  id: number;\n  callback: (id: number) => void;\n  callbackOut: () => void;\n  slideMargin: number;\n  visibleSlides: number;\n};\n\nconst SliderItem: React.FC<SliderItemProps> = ({\n  slideMargin,\n  visibleSlides,\n  zoomFactor,\n  slideClass,\n  id,\n  callback,\n  callbackOut,\n  children\n}) => (\n  <StyledSliderItem\n    zoomFactor={zoomFactor}\n    slideMargin={slideMargin}\n    visibleSlides={visibleSlides}\n    className={slideClass}\n    onMouseOver={() => callback(id)}\n    onMouseOut={callbackOut}\n  >\n      {children}\n  </StyledSliderItem>\n);\n\nexport default SliderItem;\n","import styled from 'styled-components';\nimport { StyledSliderItem } from './SliderItemStyles';\n\ntype SliderWrapperProps = {\n  zoomFactor: number;\n  visibleSlides: number;\n};\n\ntype SliderProps = {\n  visibleSlides: number;\n  transformValue: string;\n  zoomFactor: number;\n  slideMargin: number;\n  pageTransition: number;\n  ref: any;\n};\n\nexport const StyledSliderWrapper = styled.div<SliderWrapperProps>`\n  overflow: hidden;\n  position: relative;\n  background: #f8f8f8;\n  padding: ${(props) => (props.zoomFactor / props.visibleSlides) * 0.7 + '%'} 0;\n\n  .button-wrapper {\n    position: absolute;\n    width: 55px;\n    height: 100%;\n    top: 0;\n    padding: ${(props) => props.zoomFactor / 7 + '%'} 0;\n    box-sizing: border-box;\n  }\n\n  .button {\n    display: block;\n    background: rgb(0, 0, 0, 0.7);\n    border: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    color: #fff;\n    font-size: 3rem;\n    font-weight: 800;\n    cursor: pointer;\n    outline: none;\n    transition: all 0.7s;\n    user-select: none;\n\n    :hover {\n      opacity: 0.5;\n    }\n  }\n\n  .back {\n    left: 0;\n    border-radius: 0 1.5vw 1.5vw 0;\n  }\n\n  .forward {\n    right: 0;\n    border-radius: 1.5vw 0 0 1.5vw;\n  }\n`;\n\nexport const StyledSlider = styled.div<SliderProps>`\n  display: flex;\n  padding: 0 55px;\n  transition: transform ${(props) => props.pageTransition}ms ease;\n\n  :hover ${StyledSliderItem} {\n    transform: translateX(${(props) => props.transformValue});\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\n// Components\nimport SliderItem from './SliderItem';\n// Styles\nimport { StyledSliderWrapper, StyledSlider } from './SliderStyles';\n// Types\ntype SliderProps = {\n  children?: any;\n  zoomFactor: number;\n  slideMargin: number;\n  maxVisibleSlides: number;\n  pageTransition: number;\n};\n\nconst numberOfSlides = (maxVisibleSlides: number, windowWidth: number) => {\n  if (windowWidth > 1200) return maxVisibleSlides;\n  if (windowWidth > 992) return 4;\n  if (windowWidth > 768) return 3;\n  return 2;\n};\n\nconst Slider: React.FC<SliderProps> = ({\n  children,\n  zoomFactor,\n  slideMargin,\n  maxVisibleSlides,\n  pageTransition\n}) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [transformValue, setTransformValue] = useState(`-${zoomFactor / 2}%`);\n  const [scrollSize, setScrollSize] = useState(0);\n  \n  const sliderRef = useRef<HTMLElement>(null);\n\n  const visibleSlides = numberOfSlides(maxVisibleSlides, scrollSize);\n  // Pages start at 0, therefore -1 at the end here\n  const totalPages: number = Math.ceil(children.length / visibleSlides) - 1;\n\n  useEffect(() => {\n    //@ts-ignore\n    const resizeObserver = new ResizeObserver(entries => {\n      setScrollSize(entries[0].contentRect.width);\n    });\n    resizeObserver.observe(sliderRef.current!);\n  }, [sliderRef]);\n\n  // Position slider on resize\n  useEffect(() => {\n    if (sliderRef && sliderRef.current) {\n      if (currentPage > totalPages) setCurrentPage(totalPages);\n      sliderRef.current.style.transform = `translate3D(-${\n        currentPage * scrollSize\n      }px, 0, 0)`;\n    }\n  }, [sliderRef, currentPage, scrollSize, totalPages]);\n\n  // Have to disable hover effect on slides when flipping page\n  // Otherwise it will look ugly when mouse hovers over the slides\n  const disableHoverEffect = () => {\n    if (sliderRef.current) sliderRef.current.style.pointerEvents = 'none';\n    setTimeout(() => {\n      if (sliderRef.current) sliderRef.current.style.pointerEvents = 'all';\n    }, pageTransition);\n  };\n\n  const handleSlideMove = (forward: boolean) => {\n    disableHoverEffect();\n    setCurrentPage(currentPage + (forward ? 1 : -1));\n\n    if (sliderRef.current)\n      sliderRef.current.style.transform = `translate3D(-${\n        (currentPage + (forward ? 1 : -1)) * scrollSize\n      }px, 0, 0)`;\n  };\n\n  const handleMouseOver = (id: number) => {\n    if (id % visibleSlides === 1) setTransformValue('0%'); // left\n    if (id % visibleSlides === 0) setTransformValue(`-${zoomFactor}%`); // right\n  };\n\n  const handleMouseOut = () => {\n    setTransformValue(`-${zoomFactor / 2}%`);\n  };\n\n  const assignSlideClass = (index: number, visibleSlides: number) => {\n    const classes = ['right', 'left'];\n    return classes[index % visibleSlides] || '';\n  };\n\n  return (\n    <StyledSliderWrapper zoomFactor={zoomFactor} visibleSlides={visibleSlides}>\n      <StyledSlider\n        visibleSlides={visibleSlides}\n        transformValue={transformValue}\n        zoomFactor={zoomFactor}\n        slideMargin={slideMargin}\n        pageTransition={pageTransition}\n        ref={sliderRef}\n      >\n        {children.map((child: any, i: any) => (\n          <SliderItem\n            key={i}\n            slideMargin={slideMargin}\n            visibleSlides={visibleSlides}\n            zoomFactor={zoomFactor}\n            slideClass={assignSlideClass(i + 1, visibleSlides)}\n            id={i + 1}\n            callback={handleMouseOver}\n            callbackOut={handleMouseOut}\n          >\n            {child}\n          </SliderItem>\n        ))}\n      </StyledSlider>\n      {currentPage > 0 && (\n        <div className='button-wrapper back'>\n          <button className='button back' onClick={() => handleSlideMove(false)}>\n            &#8249;\n          </button>\n        </div>\n      )}\n      {currentPage !== totalPages && (\n        <div className='button-wrapper forward'>\n          <button className='button forward' onClick={() => handleSlideMove(true)}>\n            &#8250;\n          </button>\n        </div>\n      )}\n    </StyledSliderWrapper>\n  );\n};\n\nexport default Slider;\n","import { Container } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Slider from \"../../../general/components/Slider\";\nimport { DietCategory } from \"../../types/DietCategory\";\nimport DietCard from \"../../../general/components/DietCard\";\nimport { Diet } from \"../../../general/types/diet\";\nimport DietInfoCard from \"../../../general/components/DietInfoCard\";\nimport { URLs } from \"../../../general/utils/urls\";\n\nexport default function DietsList(props: DietCategory) {\n  const SliderProps = {\n    zoomFactor: 30, // How much the image should zoom on hover in percent\n    slideMargin: 10, // Margin on each side of slides\n    maxVisibleSlides: 5,\n    pageTransition: 500, // Transition when flipping pages\n  };\n\n  const [diets, setDiets] = useState<Diet[]>([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [activeDiet, setActiveDiet] = useState<Diet>({} as Diet);\n\n  const handleDialogOpen = (diet: Diet) => {\n    setIsDialogOpen(true);\n    setActiveDiet(diet);\n  };\n\n  useEffect(() => {\n    async function fetchAPI() {\n      let response = await fetch(\n        URLs.diet + `?Page=1&PageSize=100&categoryIds=${props.id}`\n      );\n      let data = await response.json();\n      let list: Diet[] = [];\n      for (const short_diet of data.pagination) {\n        const response = await fetch(URLs.diet + `/${short_diet.id}`);\n        const data = await response.json();\n        data.id = short_diet.id;\n        list.push(data);\n      }\n      setDiets(list);\n    }\n    fetchAPI();\n  }, [props.id]);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <h2>{props.name}</h2>\n      <Dialog onClose={() => setIsDialogOpen(false)} open={isDialogOpen}>\n        <DietInfoCard {...activeDiet} />\n      </Dialog>\n      <Slider {...SliderProps}>\n        {diets.map((diet) => (\n          <div key={diet.id} onClick={() => handleDialogOpen(diet)}>\n            <DietCard {...diet} />\n          </div>\n        ))}\n      </Slider>\n    </Container>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport DietsList from \"../../explore/components/DietsList\";\nimport { DietCategory } from \"../../types/DietCategory\";\nimport { URLs } from \"../../../general/utils/urls\";\n\nexport default function Browse() {\n  const [dietCategories, setDietCategories] = useState<DietCategory[]>([]);\n\n  useEffect(() => {\n    fetch(URLs.category + \"?Page=1&PageSize=100\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDietCategories(data.pagination);\n      });\n  }, []);\n\n  return (\n    <>\n      <h2>...or Explore Diets by Category!</h2>\n      {dietCategories.map((dietCategory) => {\n        return (\n          <div key={dietCategory.id}>\n            <DietsList {...dietCategory} />\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import { Container } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Search from \"../search/components/Search\";\nimport Explore from \"../explore/components/Explore\";\n\nexport default function Browse() {\n  const [isSearchActive, setIsSearchActive] = useState(false);\n\n  const handleSearchActivation = (searchStatus: boolean) => {\n    setIsSearchActive(searchStatus);\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <h1>Browse Diets</h1>\n      <Search {...{ isSearchActive, handleSearchActivation }} />\n      {\n        <div style={isSearchActive ? { display: \"none\" } : {}}>\n          <Explore />\n        </div>\n      }\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport { URLs } from \"../../general/utils/urls\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\ninterface AddBiometricProps {\n  close: () => void\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function AddBiometric(props: AddBiometricProps) {\n  const [weight, setWeight] = useState<number>(0);\n  const [height, setHeight] = useState<number>(0);\n  const [fatIndex, setFatIndex] = useState<number>(0);\n  const [errorOpen, setErrorOpen] = useState<boolean>(false);\n\n  const addBiometric = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({weight, height, fatIndex})\n    };\n    let userId = JSON.parse(localStorage.getItem(\"user\")!).id;\n\n    fetch(`${URLs.biometric}/${userId}`, requestOptions)\n      .then((response) => {\n        if(response.ok) {\n          props.close();\n        } else {\n          setErrorOpen(true);\n        }\n      });\n  };\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent sx={{ boxSizing: \"border-box\" }}>\n        <div style={{ marginBottom: \"16px\" }}>\n          <Typography color=\"text.primary\" variant=\"h5\" textAlign=\"center\">\n            Add Biometric\n          </Typography>\n        </div>\n        <TextField\n          id=\"login-email-input\"\n          label=\"Weight\"\n          variant=\"outlined\"\n          required\n          type=\"number\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={weight}\n          onChange={(e) => setWeight(parseInt(e.target.value || '0'))}\n        />\n        <TextField\n          id=\"login-password-input\"\n          label=\"Height\"\n          variant=\"outlined\"\n          required\n          type=\"number\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={height}\n          onChange={(e) => setHeight(parseInt(e.target.value || '0'))}\n        />\n        <TextField\n          id=\"login-password-input\"\n          label=\"Fat Index\"\n          variant=\"outlined\"\n          required\n          type=\"number\"\n          sx={{ width: \"100%\", marginBottom: \"8px\", boxSizing: \"border-box\" }}\n          value={fatIndex}\n          onChange={(e) => setFatIndex(parseInt(e.target.value || '0'))}\n        />\n      </CardContent>\n      <CardActions\n        sx={{ justifyContent: \"flex-end\", padding: \"0px 16px 16px 16px\" }}\n      >\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          disabled={!(weight && height && fatIndex)}\n          onClick={addBiometric}\n        >\n          Add\n        </Button>\n      </CardActions>\n      <Snackbar\n        open={errorOpen}\n        autoHideDuration={6000}\n        onClose={() => setErrorOpen(false)}\n      >\n        <Alert onClose={() => setErrorOpen(false)} severity=\"error\" sx={{ width: '100%' }}>\n          Hubo un error :( Por favor intentalo de nuevo\n        </Alert>\n      </Snackbar>\n    </Card>\n  );\n}\n","import { Container, Divider, Typography } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport DietCard from \"../../general/components/DietCard\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport { Diet } from \"../../general/types/diet\";\nimport { Bar } from \"react-chartjs-2\";\nimport { URLs } from \"../../general/utils/urls\";\nimport Dialog from \"@mui/material/Dialog\";\nimport AddBiometric from \"./AddBiometric\";\nimport DietInfoCard from \"../../general/components/DietInfoCard\";\nimport { Box } from \"@mui/system\";\n\ninterface Biometric {\n  date: string;\n  height: number;\n  weight: number;\n}\n\nconst SliderProps = {\n  zoomFactor: 30, // How much the image should zoom on hover in percent\n  slideMargin: 10, // Margin on each side of slides\n  maxVisibleSlides: 5,\n  pageTransition: 500, // Transition when flipping pages\n};\n\nexport default function Dashboard() {\n  const [addBiometricOpen, setAddBiometricOpen] = useState(false);\n  const [lastestWeight, setLastestWeight] = useState(0);\n  const [lastestHeight, setLastestHeight] = useState(0);\n  const [lastestCaloriesConsumed, setLastestCaloriesConsumed] = useState(0);\n  const [lastestFatIndex, setLastestFatIndex] = useState(0);\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [activeDiet, setActiveDiet] = useState<Diet>({} as Diet);\n\n  function handleDialogOpen() {\n    if (diet) {\n      setIsDialogOpen(true);\n      setActiveDiet(diet!);\n    }\n  }\n\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Weight\",\n        data: [],\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  const [options, setOptions] = useState({\n    scales: {\n      y: {\n        beginAtZero: false,\n        suggestedMin: 0,\n        suggestedMax: 0,\n      },\n    },\n  });\n\n  const [diet, setDiet] = useState<Diet>();\n\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    let userId = JSON.parse(localStorage.getItem(\"user\")!).id;\n    let dietId = JSON.parse(localStorage.getItem(\"user\")!).dietId;\n\n    fetch(`${URLs.dashboard}/${userId}`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.latestBiometrics !== null) {\n          setLastestWeight(data.latestBiometrics.weight);\n          setLastestHeight(data.latestBiometrics.height);\n          setLastestCaloriesConsumed(data.latestBiometrics.caloriesConsumed);\n          setLastestFatIndex(data.latestBiometrics.fatIndex);\n        }\n        let dates = data.biometricHistory.map((bio: Biometric) =>\n          bio.date.substring(0, 10)\n        );\n        let weights = data.biometricHistory.map((bio: Biometric) => bio.weight);\n        setData({\n          labels: dates,\n          datasets: [\n            {\n              label: \"Weight\",\n              backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n              borderWidth: 1,\n              data: weights,\n            },\n          ],\n        });\n        setOptions({\n          scales: {\n            y: {\n              beginAtZero: false,\n              suggestedMin: Math.min(...weights) - 1,\n              suggestedMax: Math.max(...weights) + 1,\n            },\n          },\n        });\n      });\n\n    fetch(`${URLs.diet}/${dietId}`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status !== 400 && data !== \"Diet Not Found\") {\n          setDiet({ ...data, id: dietId });\n        } else {\n          console.log(data);\n        }\n      });\n  }, []);\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\n    >\n      {/* <Typography variant=\"h3\" style={{ margin: \"10px\" }}>\n        {\" \"}\n        Dashboard{\" \"}\n      </Typography> */}\n      <Box\n        sx={{\n          margin: \"32px\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h4\" style={{ textAlign: \"center\" }}>\n          My diet\n        </Typography>\n        <Dialog onClose={() => setIsDialogOpen(false)} open={isDialogOpen}>\n          <DietInfoCard {...activeDiet} />\n        </Dialog>\n        <Box onClick={() => handleDialogOpen()} sx={{ margin: \"16px\" }}>\n          {diet ? (\n            <DietCard {...diet!} />\n          ) : (\n            <Typography\n              variant=\"body1\"\n              style={{ textAlign: \"center\", margin: \"16px\" }}\n            >\n              You currently don't have a diet selected.\n            </Typography>\n          )}\n        </Box>\n        <Divider sx={{ marginTop: \"32px\" }} />\n      </Box>\n      <Box style={{ display: \"flex\" }}>\n        <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\" color=\"primary\">\n              Latest Weight\n            </Typography>\n            <Typography variant=\"h5\">{lastestWeight} kg</Typography>\n          </CardContent>\n        </Card>\n        <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\" color=\"primary\">\n              Latest Height\n            </Typography>\n            <Typography variant=\"h5\">{lastestHeight} m</Typography>\n          </CardContent>\n        </Card>\n        <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\" color=\"primary\">\n              Calories consumed\n            </Typography>\n            <Typography variant=\"h5\">{lastestCaloriesConsumed} cal</Typography>\n          </CardContent>\n        </Card>\n        <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\" color=\"primary\">\n              Fat index\n            </Typography>\n            <Typography variant=\"h5\">{lastestFatIndex}%</Typography>\n          </CardContent>\n        </Card>\n      </Box>\n      <Button onClick={() => setAddBiometricOpen(true)}>Add Biometrics</Button>\n      <Dialog\n        onClose={() => setAddBiometricOpen(false)}\n        open={addBiometricOpen}\n      >\n        <AddBiometric close={() => setAddBiometricOpen(false)} />\n      </Dialog>\n      <br />\n      <div style={{ width: \"50vw\" }}>\n        <Bar data={data} options={options} />\n      </div>\n      <br />\n      <br />\n    </Container>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport { Button } from \"@mui/material\";\nimport { Routes } from \"../../general/utils/routes\";\n\ninterface NavTabsProps {\n  userType: string | undefined;\n}\n\nfunction NavTabs(props: NavTabsProps) {\n  const customerTabs = (\n    <>\n      <Button title=\"Dashboard\" href={Routes.customerDashboard} color=\"primary\">\n        Dashboard\n      </Button>\n      <Button title=\"Browse\" href={Routes.customerBrowse} color=\"primary\">\n        Browse\n      </Button>\n    </>\n  );\n\n  const adminTabs = (\n    <>\n      <Button\n        title=\"Configurator\"\n        href={Routes.adminConfigurator}\n        color=\"primary\"\n      >\n        Configurator\n      </Button>\n    </>\n  );\n\n  const defaultTabs = (\n    <>\n      <Button title=\"Browse\" href={Routes.customerBrowse} color=\"primary\">\n        Browse\n      </Button>\n    </>\n  );\n\n  const renderTabs = () => {\n    switch (props.userType) {\n      case \"Customer\":\n        return customerTabs;\n      case \"Admin\":\n        return adminTabs;\n      default:\n        return defaultTabs;\n    }\n  };\n\n  return <Box sx={{ width: \"100%\" }}>{renderTabs()}</Box>;\n}\n\nexport default NavTabs;\n","import * as React from \"react\";\nimport { useHistory } from \"react-router\";\nimport Box from \"@mui/material/Box\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport { User } from \"../../general/types/user\";\nimport { Routes } from \"../../general/utils/routes\";\nimport { Stack, Typography } from \"@mui/material\";\n\nexport default function AccountMenu(user: User) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const browserHistory = useHistory();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    browserHistory.push(Routes.customerBrowse);\n    window.location.reload();\n  };\n\n  const account = () => {\n    browserHistory.push(\"/account\");\n    window.location.reload();\n  };\n\n  const help = () => {\n    browserHistory.push(\"/help\");\n    window.location.reload();\n  };\n\n  return (\n    <React.Fragment>\n      <Box sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>\n        <Tooltip title=\"Account settings\">\n          <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\n            <Avatar sx={{ width: 32, height: 32 }} src={user.avatar} />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&:before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n      >\n        <MenuItem style={{ cursor: \"default\" }}>\n          <Stack direction=\"column\">\n            <Typography>\n              {user.firstName} {user.lastName}\n            </Typography>\n            <Typography variant=\"caption\">{user.type}</Typography>\n          </Stack>\n        </MenuItem>\n        <Divider />\n        {user.type === \"Customer\" && (\n          <MenuItem onClick={help}>\n            <ListItemIcon>\n              <HelpIcon fontSize=\"small\" />\n            </ListItemIcon>\n            Help\n          </MenuItem>\n        )}\n        <MenuItem onClick={handleLogout}>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n    </React.Fragment>\n  );\n}\n","import AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport NavTabs from \"./Tabs\";\nimport { useHistory } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { User } from \"../../general/types/user\";\nimport AccountMenu from \"./AccountMenu\";\n\nfunction isUser(user: any): user is User {\n  return user.avatar && user.firstName && user.lastName && user.type;\n}\n\nexport default function CustomAppBar() {\n  const browserHistory = useHistory();\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      const parsedUser = JSON.parse(user);\n      if (isUser(parsedUser)) {\n        setUser(parsedUser);\n      }\n    }\n  }, [setUser]);\n\n  const handleOnLoginClick = () => {\n    browserHistory.push(\"/login\");\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" style={{ backgroundColor: \"white\" }}>\n        <Toolbar>\n          <NavTabs userType={user?.type} />\n          {user ? (\n            <AccountMenu {...user} />\n          ) : (\n            <Button color=\"primary\" onClick={handleOnLoginClick}>\n              {user ? \"Account\" : \"Login\"}\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function Help() {\n  return (\n    <Container\n      maxWidth=\"md\"\n      style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\n    >\n      <Box sx={{ margin: \"32px\" }}>\n        <Typography variant=\"h3\" style={{ margin: \"8px\" }}>\n          Help\n        </Typography>\n      </Box>\n\n      <Typography\n        variant=\"body1\"\n        style={{ margin: \"8px\", textAlign: \"justify\" }}\n        color=\"black\"\n      >\n        Results may vary from person to person depending on their age, health,\n        physical activity, discipline, and many others factors. Check with your\n        doctor before taking any diet and exercise program. The content on this\n        page is informative and do not substitute medical instructions, diagnose\n        or treatment. Check with your doctor any medical condition. Never ignore\n        your doctor's opinion over the content of this website. This website\n        does not recommend doctors, products, tests or procedures. Use the\n        information on this website under your responsibility to improve your\n        eating habits.\n      </Typography>\n\n      <Typography\n        variant=\"body1\"\n        style={{ margin: \"8px\", textAlign: \"justify\" }}\n        color=\"black\"\n      >\n        This website does not have any dietitians or medical experts on staff.\n        Our purpose is to help you make changes easier and quicker to your diet\n        and your own parameters and make shopping and cooking your diet easier.\n      </Typography>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Meal } from \"../../general/types/meal\";\n\nexport default function MealCard(meal: Meal) {\n  return (\n    <Card sx={{ maxWidth: 345, minWidth: 200 }} style={{ margin: \"10px\" }}>\n      <CardHeader title={meal.name} />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {meal.kilocalories} kilocalories\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button> See more </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Meal } from \"../../general/types/meal\";\nimport { URLs } from \"../../general/utils/urls\";\n\nexport default function MealInfoCard(props: { mealId: string }) {\n  const [meal, setMeal] = useState<Meal>();\n\n  useEffect(() => {\n    fetch(URLs.meal + `/${props.mealId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        data.id = props.mealId;\n        data.ingredients = data.mealIngredients;\n        setMeal(data);\n      });\n  }, []);\n\n  return (\n    <Card style={{ overflow: \"auto\" }}>\n      <CardMedia component=\"img\" height=\"140\" image={meal?.imageRef} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h4\" component=\"div\">\n          {meal?.name}\n        </Typography>\n        <Typography variant=\"h6\" component=\"div\">\n          Preparation\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {meal?.preparation}\n        </Typography>\n        <Typography variant=\"h6\" component=\"div\">\n          Ingredients\n        </Typography>\n        <List\n          sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\n        >\n          {meal?.mealIngredients.map((ingredient, index) => {\n            const primaryText = `${ingredient.amount} x ${ingredient.name}`;\n            return (\n              <ListItem key={ingredient.ingredientId}>\n                <ListItemAvatar>\n                  <Avatar>{index + 1}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={primaryText}\n                  secondary={ingredient.notes}\n                />\n              </ListItem>\n            );\n          })}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Button } from \"@mui/material\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Stack from \"@mui/material/Stack\";\nimport { useLocation } from \"react-router-dom\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { Diet } from \"../../general/types/diet\";\nimport { URLs } from \"../../general/utils/urls\";\nimport { User } from \"../../general/types/user\";\nimport MealCard from \"./MealCard\";\nimport MealInfoCard from \"./MealInfoCard\";\n\nfunction isUser(user: any): user is User {\n  return user.avatar && user.firstName && user.lastName && user.type;\n}\n\nexport default function DietPage() {\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      const parsedUser = JSON.parse(user);\n      if (isUser(parsedUser)) {\n        fetch(URLs.user + `/${parsedUser.id}`)\n          .then((response) => response.json())\n          .then((data) => {\n            setUser(data);\n          });\n      }\n    }\n  }, [setUser]);\n\n  const handleAddDietClick = () => {\n    let localUser: User = user!;\n    localUser.dietId = diet!.id;\n    fetch(URLs.diet + `/${diet!.id}/user/${user?.id}`, {\n      method: \"PUT\",\n    });\n    setUser({ ...localUser });\n    localStorage.setItem(\"user\", JSON.stringify(localUser));\n  };\n\n  const getAddDietButton = () => {\n    if (user !== undefined) {\n      if (user.dietId !== diet?.id) {\n        return (\n          <Button size=\"small\" color=\"secondary\" onClick={handleAddDietClick}>\n            Add to \"My Diet\"\n          </Button>\n        );\n      } else {\n        return (\n          <Button variant=\"contained\" color=\"success\">\n            This is your Diet!\n          </Button>\n        );\n      }\n    } else {\n      return (\n        <Tooltip title={\"Log in to add a diet\"} arrow>\n          <span>\n            <Button disabled>Add to \"My Diet\"</Button>\n          </span>\n        </Tooltip>\n      );\n    }\n  };\n\n  const dietId = useLocation().pathname.split(\"/\")[2];\n\n  const [diet, setDiet] = useState<Diet>();\n\n  useEffect(() => {\n    fetch(URLs.diet + `/${dietId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        data.id = dietId;\n        setDiet(data);\n      });\n  }, []);\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [activeMealId, setActiveMealId] = useState<string>(\"\");\n\n  const handleDialogOpen = (mealId: string) => {\n    setIsDialogOpen(true);\n    setActiveMealId(mealId);\n  };\n\n  return (\n    <>\n      <Dialog onClose={() => setIsDialogOpen(false)} open={isDialogOpen}>\n        <MealInfoCard {...{ mealId: activeMealId }} />\n      </Dialog>\n      <Container maxWidth=\"xl\">\n        <CardMedia component=\"img\" height=\"194\" image={diet?.imageRef} />\n        <Box sx={{ mb: 1, mt: 1 }}>{getAddDietButton()}</Box>\n\n        <Typography variant=\"h2\" component=\"div\">\n          {diet?.name}\n        </Typography>\n        <Box sx={{ mb: 1 }}>\n          <Stack direction=\"row\" spacing={1}>\n            {diet?.categories.map((category) => {\n              return (\n                <Tooltip key={category.id} title={category.description} arrow>\n                  <Chip label={category.name} variant=\"outlined\" />\n                </Tooltip>\n              );\n            })}\n          </Stack>\n        </Box>\n\n        <Typography variant=\"body1\" gutterBottom>\n          {diet?.description}\n        </Typography>\n        <Typography variant=\"h4\" gutterBottom component=\"div\">\n          Diet meals\n        </Typography>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid container>\n              {diet?.meals.map((meal, index) => {\n                return (\n                  <Grid key={index} item xs={12} sm={4} md={3}>\n                    <div onClick={() => handleDialogOpen(meal.id!)}>\n                      <MealCard {...meal} />\n                    </div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Box>\n        </div>\n      </Container>\n    </>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Configurator from \"./modules/admin/components/Configurator\";\nimport Login from \"./modules/auth/components/Login\";\nimport Signup from \"./modules/auth/components/Signup\";\nimport Browse from \"./modules/browse/components/Browse\";\nimport Dashboard from \"./modules/dashboard/components/Dashboard\";\nimport { Routes } from \"./modules/general/utils/routes\";\nimport AppBar from \"./modules/navigation/components/AppBar\";\nimport Help from \"./modules/help/components/Help\";\nimport DietPage from \"./modules/diets/components/DietPage\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path={Routes.signup} exact>\n            <Signup />\n          </Route>\n          <Route path={Routes.login} exact>\n            <Login />\n          </Route>\n          <Route path={Routes.customerBrowse} exact>\n            <AppBar />\n            <Browse />\n          </Route>\n          <Route path={Routes.adminConfigurator} exact>\n            <AppBar />\n            <Configurator />\n          </Route>\n          <Route path={Routes.help} exact>\n            <AppBar />\n            <Help />\n          </Route>\n          <Route path={Routes.customerDashboard} exact>\n            <AppBar />\n            <Dashboard />\n          </Route>\n          <Route path={Routes.diets}>\n            <AppBar />\n            <DietPage />\n          </Route>\n          <Route path={\"/\"} exact>\n            <Login />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}